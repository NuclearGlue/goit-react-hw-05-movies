{"version":3,"file":"static/js/movies-page.b8f37da4.chunk.js","mappings":"oMAGe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACGF,IACC,wBACGA,EAAMG,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GADD,OAWzB,C,kHCnBYI,EAAU,mCAAG,WAAMC,GAAN,8EACxBC,EAAAA,GAAAA,SAAAA,QAAyB,4CAEV,mCAHS,SAKJA,EAAAA,GAAAA,IAAA,GACT,CACPC,OAAQ,CACNC,QALS,mCAMTC,KAAM,EACNC,MAAOL,KAGVM,MAAK,SAAAC,GACJ,OAAOA,EAAOC,KAAKC,OACpB,IACAC,OAAM,SAAAC,GACDA,EAAIC,WACNC,QAAQC,IAAIH,EAAIC,SAASG,QACzBF,QAAQC,IAAIH,EAAIC,SAASI,YACzBH,QAAQC,IAAIH,EAAIM,SAChBJ,QAAQC,IAAIH,EAAIC,SAASM,SACzBL,QAAQC,IAAIH,EAAIC,SAASJ,MAE5B,IAxBqB,cAKlBnB,EALkB,yBA0BjBA,GA1BiB,2CAAH,sD,oCCGR,SAAS8B,IACtB,IAAM7B,GAAWC,EAAAA,EAAAA,MAEjB,GAA0B6B,EAAAA,EAAAA,UAAS,IAAnC,eAAO/B,EAAP,KAAcgC,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAgBA,OACE,iCACE,kBAAMC,UAAU,cAAcC,SAhBb,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAQ,mCAAG,oGACM7B,EAAWuB,GADjB,OACTf,EADS,OAEfc,EAASd,GAFM,2CAAH,qDAKdqB,GACD,EAQG,WACE,kBAAOC,KAAK,OAAOC,MAAOR,EAAQS,SAPnB,SAAAL,GACnBH,EAAUG,EAAMM,cAAcF,MAC/B,KAMK,mBAAQD,KAAK,SAASL,UAAU,oBAAhC,UACE,iBAAMA,UAAU,0BAAhB,0BAGJ,SAACpC,EAAA,EAAD,CAAWC,MAAOA,EAAOO,MAAO,CAAEC,KAAMP,OAG7C,C","sources":["components/MovieSearch/MovieList.js","components/helpres/request.js","components/MovieSearch/SearchFilm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport default function MovieList({ films }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      {films && (\n        <ul>\n          {films.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nMovieList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nexport const fetchFilms = async searchQuery => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/search/movie';\n\n  const keyApi = '118505e52235e41031409ce523bcee9b';\n\n  const films = await axios\n    .get(``, {\n      params: {\n        api_key: keyApi,\n        page: 1,\n        query: searchQuery,\n      },\n    })\n    .then(result => {\n      return result.data.results;\n    })\n    .catch(err => {\n      if (err.response) {\n        console.log(err.response.status);\n        console.log(err.response.statusText);\n        console.log(err.message);\n        console.log(err.response.headers);\n        console.log(err.response.data);\n      }\n    });\n\n  return films;\n};\n","import { fetchFilms } from 'components/helpres/request';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MovieList from './MovieList';\n\nexport default function SearchFilm() {\n  const location = useLocation();\n\n  const [films, setFilms] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const getFilms = async () => {\n      const result = await fetchFilms(search);\n      setFilms(result);\n    };\n\n    getFilms();\n  };\n\n  const handleChange = event => {\n    setSearch(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <form className=\"Search_Form\" onSubmit={handleSubmit}>\n        <input type=\"text\" value={search} onChange={handleChange} />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n      <MovieList films={films} state={{ from: location }} />\n    </>\n  );\n}\n"],"names":["MovieList","films","location","useLocation","map","movie","to","id","state","from","title","fetchFilms","searchQuery","axios","params","api_key","page","query","then","result","data","results","catch","err","response","console","log","status","statusText","message","headers","SearchFilm","useState","setFilms","search","setSearch","className","onSubmit","event","preventDefault","getFilms","type","value","onChange","currentTarget"],"sourceRoot":""}