{"version":3,"file":"static/js/115.2e834acb.chunk.js","mappings":"qMAGe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACGF,IACC,wBACGA,EAAMG,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GADD,OAWzB,C,8ICnBYI,EAAU,mCAAG,WAAMC,GAAN,8EACxBC,EAAAA,GAAAA,SAAAA,QAAyB,4CAEV,mCAHS,SAKJA,EAAAA,GAAAA,IAAA,GACT,CACPC,OAAQ,CACNC,QALS,mCAMTC,KAAM,EACNC,MAAOL,KAGVM,MAAK,SAAAC,GACJ,OAAOA,EAAOC,KAAKC,OACpB,IACAC,OAAM,SAAAC,GACDA,EAAIC,WACNC,QAAQC,IAAIH,EAAIC,SAASG,QACzBF,QAAQC,IAAIH,EAAIC,SAASI,YACzBH,QAAQC,IAAIH,EAAIM,SAChBJ,QAAQC,IAAIH,EAAIC,SAASM,SACzBL,QAAQC,IAAIH,EAAIC,SAASJ,MAE5B,IAxBqB,cAKlBnB,EALkB,yBA0BjBA,GA1BiB,2CAAH,sD,kBCFR,SAAS8B,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzC,OACE,kBAAOC,KAAK,OAAOF,MAAOA,EAAOC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,GAE/C,CCEc,SAASK,IAAc,IAAD,EAC7BnC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCmC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE7C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO1C,EAAP,KAAc2C,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,GACFK,GAEH,IAED,IAAMA,EAAQ,mCAAG,oGACMnC,EAAW8B,GADjB,OACTtB,EADS,OAEfyB,EAASzB,GAFM,2CAAH,qDAed,OACE,iCACE,kBAAM4B,UAAU,cAAcC,SAZb,SAAAC,GACnBA,EAAMC,iBACNJ,GACD,EASG,WACE,SAACf,EAAD,CAAWC,MAAOS,EAAWR,SART,SAAAkB,GAExBX,EAD6B,KAAVW,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAMK,mBAAQjB,KAAK,SAASa,UAAU,oBAAhC,UACE,iBAAMA,UAAU,0BAAhB,0BAGJ,SAAC/C,EAAA,EAAD,CAAWC,MAAOA,EAAOO,MAAO,CAAEC,KAAMP,OAG7C,C","sources":["components/MovieSearch/MovieList.js","components/helpres/request.js","components/MovieSearch/Searchbar.js","components/MovieSearch/SearchFilm.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport default function MovieList({ films }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      {films && (\n        <ul>\n          {films.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nMovieList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nexport const fetchFilms = async searchQuery => {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/search/movie';\n\n  const keyApi = '118505e52235e41031409ce523bcee9b';\n\n  const films = await axios\n    .get(``, {\n      params: {\n        api_key: keyApi,\n        page: 1,\n        query: searchQuery,\n      },\n    })\n    .then(result => {\n      return result.data.results;\n    })\n    .catch(err => {\n      if (err.response) {\n        console.log(err.response.status);\n        console.log(err.response.statusText);\n        console.log(err.message);\n        console.log(err.response.headers);\n        console.log(err.response.data);\n      }\n    });\n\n  return films;\n};\n","export default function Searchbar({ value, onChange }) {\n  return (\n    <input type=\"text\" value={value} onChange={e => onChange(e.target.value)} />\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchFilms } from 'components/helpres/request';\nimport MovieList from './MovieList';\nimport Searchbar from './Searchbar';\n\nexport default function SearchFilm() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  let queueName = searchParams.get('queue') ?? '';\n\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    if (queueName !== '') {\n      getFilms();\n    }\n  });\n\n  const getFilms = async () => {\n    const result = await fetchFilms(queueName);\n    setFilms(result);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    getFilms();\n  };\n\n  const updateQueryString = queue => {\n    const nextParams = queue !== '' ? { queue } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <form className=\"Search_Form\" onSubmit={handleSubmit}>\n        <Searchbar value={queueName} onChange={updateQueryString} />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n      <MovieList films={films} state={{ from: location }} />\n    </>\n  );\n}\n"],"names":["MovieList","films","location","useLocation","map","movie","to","id","state","from","title","fetchFilms","searchQuery","axios","params","api_key","page","query","then","result","data","results","catch","err","response","console","log","status","statusText","message","headers","Searchbar","value","onChange","type","e","target","SearchFilm","useSearchParams","searchParams","setSearchParams","queueName","get","useState","setFilms","useEffect","getFilms","className","onSubmit","event","preventDefault","queue"],"sourceRoot":""}